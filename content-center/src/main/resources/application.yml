server:
  port: 8871
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/content_center?serverTimezone=Australia/Melbourne
    hikari:
      username: root
      password: 123456
      #if version in Maven >= 6.x, then com.mysql.cj.jdbc.Driver
      driver-class-name: com.mysql.cj.jdbc.Driver

  cloud:
    nacos:
      discovery:
        #指定 nacos server的地址
        server-addr: localhost:8848
        #指定 namespace (dev) Nacos功能路径：命名空间 -> 新建命名空间 -> 复制新建命名空间的ID
#        namespace: 47a81bc5-ab3a-4036-afe6-645481d9ee01
        #指定 group
#        group: DEFAULT_GROUP
        #指定 集群cluster
#        cluster-name: Melbourne
    sentinel:
      transport:
        #指定 sentinel 控制台的地址
        dashboard: localhost:8080
    stream:
      rocketmq:
        default:
          producer:
            # 解决Spring Cloud Stream + RocketMQ 发送消息失败的问题：RocketMQ Message hasn't been sent. Caused by Send [1] times, still failed, cost [xxx]ms
            vipChannelEnabled: false
        binder:
          name-server: 127.0.0.1:9876
        bindings:
          output:
            producer:
              # 实现分布式事务消息
              transactional: true
              group: tx-add-bonus-group
      bindings:
        output:
          #用来指定生产消息的topic
          destination: add-bonus

  application:
    name: content-center
#user-center:
#  ribbon:
#    # 指定ribbon负载均衡的规则,例如：com.netflix.loadbalancer.RandomRule
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule

#开启ribbon饥饿加载，否则只有调用微服务时才会创建client,多个client需要用逗号分离
ribbon:
  eager-load:
    enabled: true
    clients: user-center

feign:
  client:
    config:
      #想要调用的微服务的名称
#      user-center:
#        loggerLevel: full
      #feign日志级别的全局配置
      default:
        loggerLevel: full
  httpclient:
    #让feign使用apache httpclient的连接池做请求，而不是默认的URLConnection(不支持连接池)
    enabled: true
    # feign的最大连接数
    max-connections: 200
    # feign单个路径的最大连接数，例如：http://user-center/users/{userId}
    max-connections-per-route: 50
  sentinel:
    # feign 整合 sentinel
    enabled: true
logging:
  level:
    com.joseph.contentcenter: debug

# Actuator 暴露所有的端点，这样才能显示出已经整合了 sentinel
management:
  endpoints:
    web:
      exposure:
        include: '*'